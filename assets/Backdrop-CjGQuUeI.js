import{r as i,j as a,k as he,i as f,Y as ye,Z as Ce,$ as je,a0 as Re,a as P,b as A,P as N,f as D,e as C,a4 as _e,a5 as Ee,a6 as Pe,a7 as be,a8 as we,a9 as Oe,aa as Te,ab as Ie,m as Se,n as y,ac as Me,ad as b}from"./index-DYZGKLOj.js";const Fe=i.createContext({isEditing:!1,setIsEditing:()=>{}}),ft=({tooltip:e,children:t,title:o})=>{const[r,n]=i.useState(!1);return a.jsx(Fe.Provider,{value:{isEditing:r,setIsEditing:n},children:a.jsx(he,{border:!0,className:"relative",children:a.jsxs("div",{className:f("flex justify-between items-center gap-2 text-white py-2 px-3",r?"flex-col items-start sm:flex-row sm:items-center":""),children:[a.jsx("div",{className:"text-lg font-medium",children:e?a.jsxs(ye,{children:[a.jsx(Ce,{disabled:!0,children:o}),a.jsxs(je,{className:"max-w-[200px]",children:[e,a.jsx(Re,{className:"stroke-white fill-white"})]})]}):a.jsx(a.Fragment,{children:o})}),t]})})})};var j="Dialog",[w,O]=P(j),[$e,g]=w(j),T=e=>{const{__scopeDialog:t,children:o,open:r,defaultOpen:n,onOpenChange:s,modal:l=!0}=e,c=i.useRef(null),u=i.useRef(null),[d=!1,x]=Se({prop:r,defaultProp:n,onChange:s});return a.jsx($e,{scope:t,triggerRef:c,contentRef:u,contentId:y(),titleId:y(),descriptionId:y(),open:d,onOpenChange:x,onOpenToggle:i.useCallback(()=>x(Ne=>!Ne),[x]),modal:l,children:o})};T.displayName=j;var I="DialogTrigger",S=i.forwardRef((e,t)=>{const{__scopeDialog:o,...r}=e,n=g(I,o),s=A(t,n.triggerRef);return a.jsx(N.button,{type:"button","aria-haspopup":"dialog","aria-expanded":n.open,"aria-controls":n.contentId,"data-state":E(n.open),...r,ref:s,onClick:D(e.onClick,n.onOpenToggle)})});S.displayName=I;var R="DialogPortal",[ke,M]=w(R,{forceMount:void 0}),F=e=>{const{__scopeDialog:t,forceMount:o,children:r,container:n}=e,s=g(R,t);return a.jsx(ke,{scope:t,forceMount:o,children:i.Children.map(r,l=>a.jsx(C,{present:o||s.open,children:a.jsx(Ie,{asChild:!0,container:n,children:l})}))})};F.displayName=R;var h="DialogOverlay",$=i.forwardRef((e,t)=>{const o=M(h,e.__scopeDialog),{forceMount:r=o.forceMount,...n}=e,s=g(h,e.__scopeDialog);return s.modal?a.jsx(C,{present:r||s.open,children:a.jsx(We,{...n,ref:t})}):null});$.displayName=h;var We=i.forwardRef((e,t)=>{const{__scopeDialog:o,...r}=e,n=g(h,o);return a.jsx(_e,{as:Ee,allowPinchZoom:!0,shards:[n.contentRef],children:a.jsx(N.div,{"data-state":E(n.open),...r,ref:t,style:{pointerEvents:"auto",...r.style}})})}),m="DialogContent",k=i.forwardRef((e,t)=>{const o=M(m,e.__scopeDialog),{forceMount:r=o.forceMount,...n}=e,s=g(m,e.__scopeDialog);return a.jsx(C,{present:r||s.open,children:s.modal?a.jsx(Le,{...n,ref:t}):a.jsx(Ge,{...n,ref:t})})});k.displayName=m;var Le=i.forwardRef((e,t)=>{const o=g(m,e.__scopeDialog),r=i.useRef(null),n=A(t,o.contentRef,r);return i.useEffect(()=>{const s=r.current;if(s)return Pe(s)},[]),a.jsx(W,{...e,ref:n,trapFocus:o.open,disableOutsidePointerEvents:!0,onCloseAutoFocus:D(e.onCloseAutoFocus,s=>{var l;s.preventDefault(),(l=o.triggerRef.current)==null||l.focus()}),onPointerDownOutside:D(e.onPointerDownOutside,s=>{const l=s.detail.originalEvent,c=l.button===0&&l.ctrlKey===!0;(l.button===2||c)&&s.preventDefault()}),onFocusOutside:D(e.onFocusOutside,s=>s.preventDefault())})}),Ge=i.forwardRef((e,t)=>{const o=g(m,e.__scopeDialog),r=i.useRef(!1),n=i.useRef(!1);return a.jsx(W,{...e,ref:t,trapFocus:!1,disableOutsidePointerEvents:!1,onCloseAutoFocus:s=>{var l,c;(l=e.onCloseAutoFocus)==null||l.call(e,s),s.defaultPrevented||(r.current||(c=o.triggerRef.current)==null||c.focus(),s.preventDefault()),r.current=!1,n.current=!1},onInteractOutside:s=>{var u,d;(u=e.onInteractOutside)==null||u.call(e,s),s.defaultPrevented||(r.current=!0,s.detail.originalEvent.type==="pointerdown"&&(n.current=!0));const l=s.target;((d=o.triggerRef.current)==null?void 0:d.contains(l))&&s.preventDefault(),s.detail.originalEvent.type==="focusin"&&n.current&&s.preventDefault()}})}),W=i.forwardRef((e,t)=>{const{__scopeDialog:o,trapFocus:r,onOpenAutoFocus:n,onCloseAutoFocus:s,...l}=e,c=g(m,o),u=i.useRef(null),d=A(t,u);return be(),a.jsxs(a.Fragment,{children:[a.jsx(we,{asChild:!0,loop:!0,trapped:r,onMountAutoFocus:n,onUnmountAutoFocus:s,children:a.jsx(Oe,{role:"dialog",id:c.contentId,"aria-describedby":c.descriptionId,"aria-labelledby":c.titleId,"data-state":E(c.open),...l,ref:d,onDismiss:()=>c.onOpenChange(!1)})}),a.jsxs(a.Fragment,{children:[a.jsx(ze,{titleId:c.titleId}),a.jsx(He,{contentRef:u,descriptionId:c.descriptionId})]})]})}),_="DialogTitle",L=i.forwardRef((e,t)=>{const{__scopeDialog:o,...r}=e,n=g(_,o);return a.jsx(N.h2,{id:n.titleId,...r,ref:t})});L.displayName=_;var G="DialogDescription",B=i.forwardRef((e,t)=>{const{__scopeDialog:o,...r}=e,n=g(G,o);return a.jsx(N.p,{id:n.descriptionId,...r,ref:t})});B.displayName=G;var z="DialogClose",q=i.forwardRef((e,t)=>{const{__scopeDialog:o,...r}=e,n=g(z,o);return a.jsx(N.button,{type:"button",...r,ref:t,onClick:D(e.onClick,()=>n.onOpenChange(!1))})});q.displayName=z;function E(e){return e?"open":"closed"}var H="DialogTitleWarning",[Be,V]=Te(H,{contentName:m,titleName:_,docsSlug:"dialog"}),ze=({titleId:e})=>{const t=V(H),o=`\`${t.contentName}\` requires a \`${t.titleName}\` for the component to be accessible for screen reader users.

If you want to hide the \`${t.titleName}\`, you can wrap it with our VisuallyHidden component.

For more information, see https://radix-ui.com/primitives/docs/components/${t.docsSlug}`;return i.useEffect(()=>{e&&(document.getElementById(e)||console.error(o))},[o,e]),null},qe="DialogDescriptionWarning",He=({contentRef:e,descriptionId:t})=>{const r=`Warning: Missing \`Description\` or \`aria-describedby={undefined}\` for {${V(qe).contentName}}.`;return i.useEffect(()=>{var s;const n=(s=e.current)==null?void 0:s.getAttribute("aria-describedby");t&&n&&(document.getElementById(t)||console.warn(r))},[r,e,t]),null},Ve=T,Ye=S,Ze=F,Ke=$,Ue=k,Je=L,Qe=B,Y=q,Z="AlertDialog",[Xe,pt]=P(Z,[O]),p=O(),K=e=>{const{__scopeAlertDialog:t,...o}=e,r=p(t);return a.jsx(Ve,{...r,...o,modal:!0})};K.displayName=Z;var et="AlertDialogTrigger",tt=i.forwardRef((e,t)=>{const{__scopeAlertDialog:o,...r}=e,n=p(o);return a.jsx(Ye,{...n,...r,ref:t})});tt.displayName=et;var ot="AlertDialogPortal",U=e=>{const{__scopeAlertDialog:t,...o}=e,r=p(t);return a.jsx(Ze,{...r,...o})};U.displayName=ot;var at="AlertDialogOverlay",J=i.forwardRef((e,t)=>{const{__scopeAlertDialog:o,...r}=e,n=p(o);return a.jsx(Ke,{...n,...r,ref:t})});J.displayName=at;var v="AlertDialogContent",[rt,nt]=Xe(v),Q=i.forwardRef((e,t)=>{const{__scopeAlertDialog:o,children:r,...n}=e,s=p(o),l=i.useRef(null),c=A(t,l),u=i.useRef(null);return a.jsx(Be,{contentName:v,titleName:X,docsSlug:"alert-dialog",children:a.jsx(rt,{scope:o,cancelRef:u,children:a.jsxs(Ue,{role:"alertdialog",...s,...n,ref:c,onOpenAutoFocus:D(n.onOpenAutoFocus,d=>{var x;d.preventDefault(),(x=u.current)==null||x.focus({preventScroll:!0})}),onPointerDownOutside:d=>d.preventDefault(),onInteractOutside:d=>d.preventDefault(),children:[a.jsx(Me,{children:r}),a.jsx(it,{contentRef:l})]})})})});Q.displayName=v;var X="AlertDialogTitle",ee=i.forwardRef((e,t)=>{const{__scopeAlertDialog:o,...r}=e,n=p(o);return a.jsx(Je,{...n,...r,ref:t})});ee.displayName=X;var te="AlertDialogDescription",oe=i.forwardRef((e,t)=>{const{__scopeAlertDialog:o,...r}=e,n=p(o);return a.jsx(Qe,{...n,...r,ref:t})});oe.displayName=te;var st="AlertDialogAction",ae=i.forwardRef((e,t)=>{const{__scopeAlertDialog:o,...r}=e,n=p(o);return a.jsx(Y,{...n,...r,ref:t})});ae.displayName=st;var re="AlertDialogCancel",ne=i.forwardRef((e,t)=>{const{__scopeAlertDialog:o,...r}=e,{cancelRef:n}=nt(re,o),s=p(o),l=A(t,n);return a.jsx(Y,{...s,...r,ref:l})});ne.displayName=re;var it=({contentRef:e})=>{const t=`\`${v}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${v}\` by passing a \`${te}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${v}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return i.useEffect(()=>{var r;document.getElementById((r=e.current)==null?void 0:r.getAttribute("aria-describedby"))||console.warn(t)},[t,e]),null},lt=K,ct=U,se=J,ie=Q,le=ae,ce=ne,de=ee,ue=oe;const dt=lt,ut=ct,ge=i.forwardRef(({className:e,...t},o)=>a.jsx(se,{className:f("fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",e),...t,ref:o}));ge.displayName=se.displayName;const fe=i.forwardRef(({className:e,...t},o)=>a.jsxs(ut,{children:[a.jsx(ge,{}),a.jsx(ie,{ref:o,className:f("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-white p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",e),...t})]}));fe.displayName=ie.displayName;const pe=({className:e,...t})=>a.jsx("div",{className:f("flex flex-col space-y-2 text-center sm:text-left",e),...t});pe.displayName="AlertDialogHeader";const me=({className:e,...t})=>a.jsx("div",{className:f("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",e),...t});me.displayName="AlertDialogFooter";const xe=i.forwardRef(({className:e,...t},o)=>a.jsx(de,{ref:o,className:f("text-lg font-semibold text-primary",e),...t}));xe.displayName=de.displayName;const De=i.forwardRef(({className:e,...t},o)=>a.jsx(ue,{ref:o,className:f("text-sm text-gray-600",e),...t}));De.displayName=ue.displayName;const ve=i.forwardRef(({className:e,...t},o)=>a.jsx(le,{ref:o,className:f(b(),e),...t}));ve.displayName=le.displayName;const Ae=i.forwardRef(({className:e,...t},o)=>a.jsx(ce,{ref:o,className:f(b({variant:"outline"}),"mt-2 sm:mt-0",e),...t}));Ae.displayName=ce.displayName;const mt=({onClose:e,confirm:t})=>{const[o,r]=i.useState(!1);return a.jsxs(a.Fragment,{children:[a.jsx("div",{className:"fixed top-0 left-0 bg-black/50 w-full h-full z-[10] fade-in-quick",onClick:()=>{t?(console.log("confirm"),r(!0)):e()}}),a.jsx(dt,{onOpenChange:r,open:o,children:a.jsxs(fe,{children:[a.jsxs(pe,{children:[a.jsx(xe,{children:"Tem certeza que deseja fechar?"}),a.jsx(De,{children:"Suas alterações serão perdidas."})]}),a.jsxs(me,{children:[a.jsx(Ae,{onClick:n=>{n.preventDefault(),r(!1)},children:"Cancelar"}),a.jsx(ve,{onClick:n=>{n.preventDefault(),e(),r(!1)},children:"Continuar"})]})]})})]})};export{mt as B,ft as F,Fe as I};
